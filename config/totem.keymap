//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Num         1
#define SymL        2
#define SymR        3
#define Nav         4
#define Fun         5
#define SAI         6

&sk {
    quick-release;
    lazy;
};

&lt {
    quick-tap-ms = <175>;
    tapping-term-ms = <200>;
    flavor = "balanced";
};

&mt {
    hold-while-undecided;
    tapping-term-ms = <170>;
    flavor = "tap-preferred";
    quick-tap-ms = <100>;
};

&sl { lazy; };

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 15 26 27 16 6 7 17 28 8 18 29 9 19 30 31 35 36 37 32 33 34>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 21 22 23 24 25 32 33 20 34 35 36 37>;
        };

        ShiftCaps: ShiftCaps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTCAPS";
            #binding-cells = <0>;
            bindings = <&sl 9>, <&caps_layer>;

            tapping-term-ms = <240>;
        };

        hml_und: hml_und {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_UND";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 15 26 27 16 6 7 17 28 8 18 29 9 19 30 31 35 36 37 32 33 34>;
            hold-while-undecided;
        };

        com_semi: com_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COM_SEMI";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        per_col: per_col {
            compatible = "zmk,behavior-mod-morph";
            label = "PER_COL";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        sailayer: sailayer {
            compatible = "zmk,behavior-tap-dance";
            label = "SAILAYER";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 6>;

            tapping-term-ms = <240>;
        };
    };

    combos {
        compatible = "zmk,combos";

        towasd {
            bindings = <&to 9>;
            key-positions = <31 36>;
            layers = <0>;
        };
    };

    macros {
        spacenum: spacenum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1 &kp SPACE>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1 &kp SPACE>;

            label = "SPACENUM";
        };

        caps_layer: caps_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&tog 10 &kp CAPSLOCK>,
                <&macro_release>,
                <&tog 10 &kp CAPSLOCK>;

            label = "CAPS_LAYER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
           &kp Q            &kp W            &kp E                    &kp R                  &kp T        &kp Y         &kp U              &kp I                &kp O            &kp P
           &hml LEFT_GUI A  &hml LEFT_ALT S  &hml_und LEFT_CONTROL D  &hml_und LEFT_SHIFT F  &kp G        &kp H         &hmr LEFT_SHIFT J  &hmr LEFT_CONTROL K  &hmr LEFT_ALT L  &hmr LEFT_GUI SINGLE_QUOTE
&sailayer  &kp Z            &kp X            &kp C                    &kp V                  &kp B        &kp N         &kp M              &kp COMMA            &kp PERIOD       &kp MINUS                   &ShiftCaps
                                             &lt 5 ESCAPE             &lt 1 SPACE            &lt 3 TAB    &lt 2 RETURN  &lt 4 BACKSPACE    &lt 5 DELETE
            >;
        };

        Num {
            bindings = <
       &kp HOME        &kp PRINTSCREEN    &kp C_MUTE        &kp END          &none         &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp SLASH
       &kp LC(Z)       &kp LC(X)          &kp LC(C)         &kp LC(V)        &kp LC(Y)     &kp PLUS      &kp N4  &kp N5  &kp N6  &kp DOT
&none  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP  &kp C_NEXT    &kp CARET     &kp N1  &kp N2  &kp N3  &kp MINUS  &ShiftCaps
                                          &none             &none            &none         &kp EQUAL     &kp N0  &none
            >;

            label = "Num";
        };

        SymL {
            bindings = <
       &kp EXCLAMATION  &kp AT_SIGN    &kp HASH       &kp DOLLAR        &kp RA(NUMBER_1)    &none  &none      &none      &none         &none
       &kp BACKSLASH    &kp RA(COLON)  &kp LESS_THAN  &kp GREATER_THAN  &kp PIPE            &none  &kp LSHFT  &kp LCTRL  &kp LEFT_ALT  &kp LGUI
&none  &none            &kp TILDE      &kp GRAVE      &none             &none               &none  &none      &none      &none         &none     &none
                                       &none          &none             &none               &none  &none      &none
            >;

            label = "SymL";
        };

        SymR {
            bindings = <
       &none     &none         &none      &none      &none    &kp RA(LC(SLASH))  &kp AMPERSAND         &kp PERCENT            &kp RIGHT_BRACKET  &kp QUESTION
       &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT  &none    &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE     &kp RIGHT_BRACE
&none  &none     &none         &none      &none      &none    &kp RA(N)          &none                 &kp SEMICOLON          &kp COLON          &kp UNDER        &none
                               &none      &none      &none    &none              &none                 &none
            >;

            label = "SymR";
        };

        Nav {
            bindings = <
       &none     &none     &none      &none      &none    &kp INSERT  &kp HOME           &kp PAGE_DOWN     &kp PAGE_UP      &kp END
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &tog 8      &kp LEFT_ARROW     &kp DOWN          &kp UP_ARROW     &kp RIGHT_ARROW
&none  &none     &none     &none      &none      &none    &none       &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP  &none            &none
                           &none      &none      &none    &none       &none              &none
            >;

            label = "Nav";
        };

        Fun {
            bindings = <
       &none     &none     &none      &none      &none    &none  &kp F7  &kp F8  &kp F9  &kp F12
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none  &kp F4  &kp F5  &kp F6  &kp F11
&none  &none     &none     &none      &none      &none    &none  &kp F1  &kp F2  &kp F3  &kp F10  &none
                           &none      &none      &none    &none  &none   &none
            >;

            label = "Fun";
        };

        SAI {
            bindings = <
        &trans  &trans          &trans              &trans            &trans           &trans  &trans          &trans  &trans  &trans
        &trans  &kp S           &kp D               &kp F             &trans           &trans  &trans          &trans  &trans  &trans
&tog 6  &trans  &mt LEFT_ALT X  &mt LEFT_CONTROL C  &mt LEFT_SHIFT V  &trans           &trans  &trans          &trans  &trans  &trans  &none
                                &trans              &spacenum         &kp LC(SPACE)    &trans  &studio_unlock  &trans
            >;

            label = "SAI";
        };

        NavLock {
            bindings = <
       &none     &none     &none      &none      &none    &kp INS  &kp HOME           &kp PAGE_DOWN     &kp PAGE_UP      &kp END
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &tog 8   &kp LEFT_ARROW     &kp DOWN_ARROW    &kp UP_ARROW     &kp RIGHT_ARROW
&none  &none     &none     &none      &none      &none    &none    &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP  &none            &tog 8
                           &none      &none      &none    &none    &none              &none
            >;

            label = "NavLock";
        };

        wasd {
            bindings = <
         &kp TAB    &kp Q  &none  &kp E      &kp R        &kp N1  &kp N2    &kp N3        &kp N4     &kp N5
         &kp LSHFT  &kp A  &kp W  &kp D      &kp F        &none   &kp LEFT  &kp UP_ARROW  &kp RIGHT  &none
&kp ESC  &kp CAPS   &kp Z  &kp S  &kp C      &kp V        &none   &none     &kp DOWN      &none      &none   &to 0
                           &kp X  &kp SPACE  &kp LCTRL    &none   &none     &none
            >;

            label = "wasd";
        };

        Shift {
            label = "Shift";
            bindings = <
       &kp LS(Q)            &kp LS(W)            &kp LS(E)                    &kp LS(R)                  &kp LS(T)    &kp LS(Y)  &kp LS(U)              &kp LS(I)                &kp LS(O)            &kp LS(P)
       &hml LEFT_GUI LS(A)  &hml LEFT_ALT LS(S)  &hml_und LEFT_CONTROL LS(D)  &hml_und LEFT_SHIFT LS(F)  &kp LS(G)    &kp LS(H)  &hmr LEFT_SHIFT LS(J)  &hmr LEFT_CONTROL LS(K)  &hmr LEFT_ALT LS(L)  &hmr LEFT_GUI LS(SINGLE_QUOTE)
&none  &kp LS(Z)            &kp LS(X)            &kp LS(C)                    &kp LS(V)                  &kp LS(B)    &kp LS(N)  &kp LS(M)              &kp LS(COMMA)            &kp LS(PERIOD)       &kp LS(MINUS)                   &none
                                                 &kp ESCAPE                   &kp SPACE                  &kp TAB      &kp ENTER  &kp BACKSPACE          &kp LC(DELETE)
            >;
        };

        Caps {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &caps_layer
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Caps";
        };
    };
};
